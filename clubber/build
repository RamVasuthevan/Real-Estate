#!/bin/bash

# Navigate to the directory of the script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Move to the project root directory from the directory of the script
cd "$DIR/../"

# Define the path to the pandoc .deb file and the directory where it will be extracted
PANDOC_DEB_PATH="$(find bin -type f -name 'pandoc*.deb' -print -quit)"
PANDOC_EXTRACT_DIR="bin/pandoc_dir"
PANDOC_PATH="$PANDOC_EXTRACT_DIR/usr/bin/pandoc"

# Check if the pandoc executable exists. If not, extract it from the .deb file.
if [ ! -f "$PANDOC_PATH" ]; then
    echo "Pandoc executable not found, extracting..."
    mkdir -p "$PANDOC_EXTRACT_DIR"
    dpkg -x "$PANDOC_DEB_PATH" "$PANDOC_EXTRACT_DIR"
fi

echo "Current directory: $(pwd)"

# Ensure _site directory exists
mkdir -p website/_site

# Copy style.css to the _site directory
cp website/_templates/style.css website/_site/

# Define the path to the template
TEMPLATE_PATH="website/_templates/document_template.html"

# Convert metadata files to HTML
find website/documents -type f \( -name 'metadata.md' -o -name 'metadata.markdown' \) | while IFS= read -r metadata_file; do
    # Extract the directory and base name to create corresponding HTML file in _site
    dir=${metadata_file#website/} # Remove the 'website/' prefix
    dir_no_ext="${dir%.*}"
    output_file="website/_site/$dir_no_ext.html"
    
    # Ensure the output directory exists
    mkdir -p $(dirname "$output_file")
    
    # Use pandoc to convert metadata to HTML using the template
    "$PANDOC_PATH" "$metadata_file" --template "$TEMPLATE_PATH" --to html --output "$output_file"
done

# Convert other markdown files in website to HTML
find website -maxdepth 1 -type f -name '*.markdown' | while IFS= read -r md_file; do
    base=$(basename -- "$md_file")
    base_no_ext="${base%.*}"
    output_file="website/_site/$base_no_ext.html"
    
    # Use pandoc to convert markdown to HTML
    "$PANDOC_PATH" "$md_file" --to html --output "$output_file"
done

# Copy non-markdown files from website to _site directory
find website -type d \( -name '_*' -prune \) -o -type f ! -name '*.markdown' -print | while IFS= read -r file; do
    if [[ ! "$file" == website/_site* ]]; then
        dest=${file#website/} # Remove the 'website/' prefix
        dest_dir=$(dirname "$dest")
        mkdir -p "website/_site/$dest_dir" # Ensure the destination directory exists
        cp "$file" "website/_site/$dest"
    fi
done
