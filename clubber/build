#!/bin/bash

# Navigate to the directory of the script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Move up to the project root directory from the directory of the script
cd "$DIR/../"

# Define the path to the pandoc .deb file and the directory where it will be extracted
PANDOC_DEB_PATH="$DIR/../pandoc-3.1.8-1-amd64.deb"
PANDOC_EXTRACT_DIR="$DIR/../pandoc_dir"
PANDOC_PATH="$PANDOC_EXTRACT_DIR/usr/bin/pandoc"

# Check if the pandoc executable exists. If not, check if the .deb file exists, and extract it.
if [ ! -f "$PANDOC_PATH" ]; then
    # Ensure Pipenv is installed
    if ! command -v pipenv &> /dev/null
    then
        echo "pipenv could not be found, installing..."
        pip install pipenv
    fi
    
    # Synchronize Pipenv
    pipenv sync --dev
    
    # If the .deb file doesn't exist, download it.
    if [ ! -f "$PANDOC_DEB_PATH" ]; then
        pipenv run install_pandoc
    fi
    
    # Extract pandoc from the .deb file
    mkdir -p "$PANDOC_EXTRACT_DIR"
    dpkg -x "$PANDOC_DEB_PATH" "$PANDOC_EXTRACT_DIR"
fi

echo "Current directory: $(pwd)"

# Ensure _site directory exists
mkdir -p website/_site

# Copy style.css to the _site directory
cp website/_templates/style.css website/_site/

# Run pandoc for each markdown file in the website directory
for file in website/*.markdown; do
    filename=$(basename -- "$file")
    base="${filename%.*}"
    output_file="website/_site/$base.html"
    "$PANDOC_PATH" "$file" --standalone --from=markdown --to=html \
        --include-in-header=website/_templates/head.html \
        --include-before-body=website/_templates/header.html \
        --include-after-body=website/_templates/footer.html \
        --output="$output_file" --css=style.css
done

# Copy files and folders in the website that are not in a folder starting with _
# and are not .markdown files
find website -type d \( -name '_*' -prune \) -o -type f ! -name '*.markdown' -print | while IFS= read -r file; do
    # If the file is not already in _site, copy it there
    if [[ ! "$file" == website/_site* ]]; then
        dest=${file#website/} # Remove the 'website/' prefix
        dest_dir=$(dirname "$dest")
        mkdir -p "website/_site/$dest_dir" # Ensure the destination directory exists
        cp "$file" "website/_site/$dest"
    fi
done
