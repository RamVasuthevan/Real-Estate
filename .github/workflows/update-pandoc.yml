name: Update Pandoc

on:
  schedule:
    - cron: '0 0 * * SAT' # Runs every Saturday at 00:00

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Check Latest Pandoc Release
      id: check_version
      run: |
        LATEST_RELEASE_JSON=$(curl -s "https://api.github.com/repos/jgm/pandoc/releases/latest")
        LATEST_VERSION=$(echo $LATEST_RELEASE_JSON | jq -r .tag_name | grep -oP 'v\K.*')
        CURRENT_VERSION=$(ls bin/ | grep -oP 'pandoc-\K\d+\.\d+\.\d+' | sort -V | tail -n 1)
        
        if [ "$LATEST_VERSION" == "$CURRENT_VERSION" ]; then
          echo "The current version $CURRENT_VERSION is the latest version."
        elif [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
          echo "::set-output name=new_version::$LATEST_VERSION"
        fi
      shell: bash
    
    - name: Download if New Version
      if: steps.check_version.outputs.new_version
      run: |
        NEW_VERSION=${{ steps.check_version.outputs.new_version }}
        DEB_FILE="pandoc-$NEW_VERSION-1-amd64.deb"
        curl -L -o "bin/$DEB_FILE" "https://github.com/jgm/pandoc/releases/download/v$NEW_VERSION/$DEB_FILE"
        
    - name: Create Pull Request
      if: steps.check_version.outputs.new_version
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update Pandoc to ${{ steps.check_version.outputs.new_version }}"
        title: "Update Pandoc to ${{ steps.check_version.outputs.new_version }}"
        branch: "pandoc-update-${{ steps.check_version.outputs.new_version }}"
        labels: automated-pr
